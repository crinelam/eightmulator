#include <cstdlib>
#include <cinttypes>
#include <ctime>
#include <iostream>

class Cpu {
private:
    
public:
    uint16_t opcode;
    uint8_t memory[4096];
    uint8_t graphics[64 * 32];
    uint8_t registers[16];
    uint16_t index;

    uint16_t programCounter;
    uint8_t delayTimer;
    uint8_t soundTimer;

    uint16_t stack[16];
    uint16_t stackPointer;

    uint8_t keys[16];

    // from https://multigesture.net/articles/how-to-write-an-emulator-chip-8-interpreter/
    unsigned char fontset[80] = { 
    0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
    0x20, 0x60, 0x20, 0x20, 0x70, // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
    0x90, 0x90, 0xF0, 0x10, 0x10, // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
    0xF0, 0x10, 0x20, 0x40, 0x40, // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90, // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
    0xF0, 0x80, 0x80, 0x80, 0xF0, // C
    0xE0, 0x90, 0x90, 0x90, 0xE0, // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
    0xF0, 0x80, 0xF0, 0x80, 0x80  // F
    };

    bool printInfo;
    
    void init(bool print);
    void incrementProgramCounter();
    void cycle();
};